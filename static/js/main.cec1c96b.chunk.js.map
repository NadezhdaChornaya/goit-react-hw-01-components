{"version":3,"sources":["components/profile/styleProfile.js","components/profile/Profile.js","components/statistics/styleStatistics.js","components/statistics/Statistics.js","components/friendList/stylesFriendList.js","components/friendList/FriendList.js","components/transactionHistory/styleTransaction.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["CardWrapper","styled","div","User","p","UserInfo","ListStats","ul","ItemStats","li","Label","span","Quantity","Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","defaultProps","randomFrom","backgroundColor","Math","floor","random","length","Section","section","Title","h2","ListStat","ItemStat","props","backColor","Percentage","Statistics","title","map","id","label","percentage","ListFriends","FriendList","friends","isOnline","width","TableTrensaction","table","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cec1c96b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst CardWrapper = styled.div`\nwidth: 40vw;\n\n\ttext-align: center;\n\tmargin: 0 auto;\n    border: solid 1px #d8e0ea;\n    .avatar{\n        width: 100px;\n        padding: 30px;\n        border-radius: 50%;}\n    `;\n\n// const Avatar = styled.img`\n// width: 100px;\n//   padding: 30px;\n//   border-radius: 50%;\n// `;\nconst User = styled.p`  \nfont-size: 18px;\n  font-weight: 700;`;\n\nconst UserInfo = styled.p`\n font-size: 14px;\n  color: #768696;\n  line-height: 1;\n`;\n\nconst ListStats = styled.ul`\n display: flex;\n  justify-content: space-between;\n\n  margin: 0;\n  padding: 20px 0 0;\n\n  list-style: none;\n`;\nconst ItemStats = styled.li`\nwidth: calc(100% / 3);\n  text-align: center;\n\n  padding: 15px 0 20px;\n\n  border:1px solid rgb(228, 233, 240);\n\n  background-color: rgb(243, 246, 249);\n`;\n\nconst Label = styled.span`\nmargin-right: 5px;\n\nfont-size: 14px;\n  line-height: 1.8;\n  color: #768696;\n`;\n\nconst Quantity = styled.span`\nfont-size: 16px;\n  font-weight: 900;\n`;\n\nexport { CardWrapper, User, UserInfo, ListStats, ItemStats, Label, Quantity }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardWrapper, User, UserInfo, ListStats, ItemStats, Label, Quantity } from './styleProfile';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n    return (\n        <CardWrapper>\n            <div className=\"description\">\n                <img\n                    src={avatar}\n                    alt=\"Аватар пользователя\"\n                    className=\"avatar\"\n                />\n                <User>{name}</User>\n                <UserInfo>@{tag}</UserInfo>\n                <UserInfo>{location}</UserInfo>\n            </div>\n\n            <ListStats>\n                <ItemStats>\n                    <Label>Followers</Label>\n                    <Quantity>{stats.followers}</Quantity>\n                </ItemStats>\n                <ItemStats>\n                    <Label>Views</Label>\n                    <Quantity>{stats.views}</Quantity>\n                </ItemStats>\n                <ItemStats>\n                    <Label>Likes</Label>\n                    <Quantity>{stats.likes}</Quantity>\n                </ItemStats>\n            </ListStats>\n        </CardWrapper>)\n}\nProfile.defaultProps = {\n    avatar:\n        'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    stats: PropTypes.objectOf(PropTypes.number).isRequired,\n}\n\nexport default Profile;","import styled from 'styled-components';\n\nconst randomFrom = (backgroundColor) => {\n  const randomColor = `#${backgroundColor[Math.floor(Math.random() * backgroundColor.length - 1)]}`;\n  return randomColor\n};\n\nconst Section = styled.section`\n width: 40vw;\n  margin: 50px auto;\n\n  font-family: 'Lato', sans-serif;\n\n  border-radius: 4px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n`;\n\nconst Title = styled.h2`\n padding: 20px;\n  margin-bottom: 0;\n\n  text-align: center;\n  font-size: 16px;\n\n  text-transform: uppercase;\n`;\n\nconst ListStat = styled.ul`\n  display: flex;\n  justify-content: space-between;\n\n  margin: 0;\n  padding: 0;\n\n  list-style: none;\n`;\n\nconst ItemStat = styled.li`\n\n  width: calc(100% / 3);\n  text-align: center;\n\n  padding: 15px 0 20px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(228, 233, 240);\n\n  background-color: ${(props) => props.backColor};\n`;\n\nconst Label = styled.span`\n display: block;\n margin-right: 5px;\n font-size: 14px;\n line-height: 1.8;\n color: #fff;\n font-weight: 900;\n`;\n\nconst Percentage = styled.span`\n font-size: 18px;\n color: #fff;\n font-weight: 900;\n`;\nexport { randomFrom, Section, Title, ListStat, ItemStat, Label, Percentage }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { randomFrom, Section, Title, ListStat, ItemStat, Label, Percentage } from './styleStatistics';\nimport backgroundColor from './backgroundColor.json';\n\nfunction Statistics({ title, stats }) {\n    return (<Section>\n        <Title>{title}</Title>\n\n        <ListStat>\n            {stats.map(({ id, label, percentage }) => {\n                return (<ItemStat key={id} backColor={randomFrom(backgroundColor)}>\n                    <Label>{label}</Label>\n                    <Percentage>{`${percentage}%`}</Percentage>\n                </ItemStat>)\n            })}\n        </ListStat>\n    </Section>)\n}\n\nStatistics.defaultProps = {\n    title: '',\n}\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string,\n            label: PropTypes.string,\n            percentage: PropTypes.number,\n        }),\n    ).isRequired,\n}\n\nexport default Statistics;","import styled from 'styled-components';\n\nexport const ListFriends = styled.ul`\n    width: 40vw;\n    margin: 0 auto;\n    padding: 20px 0;\n    list-style: none;\n  .item{\n  display: flex;\n  align-items: center;\n\n  margin: 10px 20px;\n\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  }\n  .item:hover {\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n}\n.status {\n  width: 15px;\n  height: 15px;\n  margin-left: 15px;\n background: red;\n  border-radius: 50%;\n}\n.statusActive {\n   width: 15px;\n  height: 15px;\n  margin-left: 15px;\n background: green;\n  border-radius: 50%;\n}\n.avatar {\n  width: 70px;\n  height: 70px;\n  padding: 5px 15px;\n\n  border-radius: 25px/15px;\n}\n\n.name {\n  font-size: 22px;\n}\n`\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListFriends } from './stylesFriendList';\n\nfunction FriendList({ friends }) {\n    return (\n        <ListFriends>\n            {friends.map(({ id, isOnline, avatar, name }) => {\n                return (\n                    <li key={id} className=\"item\">\n                        <span className={isOnline ? \"statusActive\" : \"status\"}>\n                        </span>\n                        <img className=\"avatar\" src={avatar} alt=\"avatar\" width=\"48\" />\n                        <p className=\"name\">{name}</p>\n                    </li>\n                )\n            })}\n        </ListFriends>\n    )\n\n}\n\nFriendList.defaultProps = {\n    avatar:\n        'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n}\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.exact({\n            avatar: PropTypes.string,\n            name: PropTypes.string.isRequired,\n            isOnline: PropTypes.bool.isRequired,\n            id: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n}\n\nexport default FriendList;","import styled from 'styled-components';\n\nexport const TableTrensaction = styled.table`\n  width: 40vw;\n  margin: 50px auto;\n\n  border-radius: 4px;\n\n  background-color: rgb(255, 255, 255);\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n.transaction-head{\n     background-color: #00bcd4;\n};\n.transaction-body:nth-child(even) {\n  background-color: rgb(236, 242, 243);\n};\n.transaction-cell{\n  padding: 20px 50px;\n  font-weight: 900;\n\n  text-transform: uppercase;\n  color: #fff;\n\n  border-right: 1px solid rgb(224, 230, 231);\n  border-left: 1px solid rgb(224, 230, 231);\n}\n.transaction-data{\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  text-align: center;\n  color: #5c6975;\n  \n  border-right: 1px solid rgb(224, 230, 231);\n  border-left: 1px solid rgb(224, 230, 231);\n}\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableTrensaction } from './styleTransaction';\n\nfunction TransactionHistory({ items }) {\n    return (\n        <TableTrensaction>\n            <thead className=\"transaction-head\">\n                <tr>\n                    <th className=\"transaction-cell\">Type</th>\n                    <th className=\"transaction-cell\">Amount</th>\n                    <th className=\"transaction-cell\">Currency</th>\n                </tr>\n            </thead>\n\n            <tbody >\n                {items.map(({ id, type, amount, currency }) => {\n                    return (\n                        <tr key={id} className=\"transaction-body\">\n                            <td className=\"transaction-data\">{type}</td>\n                            <td className=\"transaction-data\">{amount}</td>\n                            <td className=\"transaction-data\">{currency}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </TableTrensaction>\n    )\n}\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.exact({\n            currency: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\n\nexport default TransactionHistory;","import React from 'react';\nimport Profile from './profile/Profile';\nimport user from './profile/user.json';\nimport Statistics from './statistics/Statistics'\nimport statisticalData from './statistics/statisticalData.json';\nimport FriendList from './friendList/FriendList';\nimport friends from './friendList/friends.json';\nimport TransactionHistory from './transactionHistory/TransactionHistory';\nimport transactions from './transactionHistory/transactions.json';\n\nexport default function App() {\n    return (\n        <>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics title=\"Upload stats\" stats={statisticalData} />;\n            <Statistics stats={statisticalData} />;\n            <FriendList friends={friends} />;\n            <TransactionHistory items={transactions} />;\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}